{"slots":{"0":{"name":"screen","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"-- Add to programming board's screen.mouseDown(*,*).\n\n-- Select message randomly\nlocal message = _messages[math.random(1, #_messages)]\n\n-- Get some data for the examples\n-- The player id\nlocal id = unit.getMasterPlayerId()\n-- The player name\nlocal username = system.getPlayerName(id)\n-- The player position\nlocal position = vec3(unit.getMasterPlayerPosition())\n\n-- Prepare input package\nlocal package = {\n    message = message,\n    id = id,\n    name = username,\n    pos = position\n}\n\n-- Encode the package data with dkjson library\nlocal input = json.encode(package)\n\n-- Send the data package to the screen in input\nscreen.setScriptInput(input)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"0"},"key":2},{"code":"-- Add to programming board's unit.start() and connect it to this screen.\n\n-- Define messages global table\n_messages = {\n    \"Hi, I am a message!\",\n    \"We love Pops the Hamster!\",\n    \"WARNING: No warnings found.\",\n    \"I am a screen unit.\",\n    \"Are you enjoying this?\",\n    \"Pending Screen Operations\",\n    \"Oh no! NQ-Ligo changed my code.\",\n    \"It is NOT NQ-Node\\'s fault.\",\n    \"Knock knock...\",\n    \"Who's there?\",\n    \"Ran out of Knock knock jokes.\",\n    \"It is all NQ-Deckard\\'s fault.\"\n}","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"0"}],"methods":[],"events":[]}